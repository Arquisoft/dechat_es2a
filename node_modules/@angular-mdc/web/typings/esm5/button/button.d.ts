import { AfterContentInit, ElementRef, OnDestroy, Renderer2 } from '@angular/core';
import { MdcRipple } from '@angular-mdc/web/ripple';
import { MdcIcon } from '@angular-mdc/web/icon';
export declare class MdcButton implements AfterContentInit, OnDestroy {
    protected _renderer: Renderer2;
    protected _elementRef: ElementRef;
    protected _ripple: MdcRipple;
    raised: boolean;
    protected _raised: boolean;
    primary: boolean;
    protected _primary: boolean;
    dense: boolean;
    protected _dense: boolean;
    secondary: boolean;
    protected _secondary: boolean;
    unelevated: boolean;
    protected _unelevated: boolean;
    outlined: boolean;
    protected _outlined: boolean;
    icon: any;
    protected _icon: any;
    disabled: boolean;
    protected _disabled: boolean;
    readonly tabindex: number;
    isHostClass: boolean;
    readonly classRaised: string;
    readonly classPrimary: string;
    readonly classSecondary: string;
    readonly classDense: string;
    readonly classUnelevated: string;
    readonly classOutlined: string;
    onclick(evt: Event): void;
    buttonIcon: MdcIcon;
    constructor(_renderer: Renderer2, _elementRef: ElementRef, _ripple: MdcRipple);
    ngAfterContentInit(): void;
    ngOnDestroy(): void;
    setDisabled(disabled: boolean): void;
    setRaised(raised: boolean): void;
    setPrimary(primary: boolean): void;
    setDense(dense: boolean): void;
    setSecondary(secondary: boolean): void;
    setUnelevated(unelevated: boolean): void;
    setOutlined(outlined: boolean): void;
    setIcon(icon: any): void;
    /** Focuses the button. */
    focus(): void;
    getHostElement(): any;
    private _onClick(event);
}
