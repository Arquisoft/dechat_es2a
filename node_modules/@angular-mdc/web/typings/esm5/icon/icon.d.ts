import { ChangeDetectorRef, ElementRef, OnInit, Renderer2 } from '@angular/core';
export declare class MdcIcon implements OnInit {
    protected _changeDetectorRef: ChangeDetectorRef;
    protected _renderer: Renderer2;
    elementRef: ElementRef;
    protected ariaHidden: string;
    private _defaultFontSetClass;
    private _previousFontSetClass;
    private _previousFontIconClass;
    private _previousFontSize;
    /** Font set that the icon is a part of. */
    fontSet: string;
    protected _fontSet: string;
    /** Name of an icon within a font set. */
    fontIcon: string;
    protected _fontIcon: string;
    fontSize: number;
    protected _fontSize: number;
    leading: boolean;
    protected _leading: boolean;
    trailing: boolean;
    protected _trailing: boolean;
    clickable: boolean;
    protected _clickable: boolean;
    foundation: any;
    constructor(_changeDetectorRef: ChangeDetectorRef, _renderer: Renderer2, elementRef: ElementRef, ariaHidden: string);
    ngOnInit(): void;
    private _updateFontIconClasses();
    private _getDefaultFontSetClass();
    /**
       * Cleans up a value to be used as a fontIcon or fontSet.
       * Since the value ends up being assigned as a CSS class, we
       * have to trim the value and omit space-separated values.
       */
    private _cleanupFontValue(value);
    /** Retrieves the DOM element of the component host. */
    protected _getHostElement(): any;
    isLeading(): boolean;
    isTrailing(): boolean;
    setIcon(content: string): void;
    getIcon(): string;
    setFontSize(value: number): void;
    setClickable(clickable: boolean): void;
}
