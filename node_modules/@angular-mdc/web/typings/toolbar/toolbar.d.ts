import { AfterViewInit, ChangeDetectorRef, ElementRef, EventEmitter, OnChanges, OnDestroy, Renderer2, SimpleChange } from '@angular/core';
import { EventRegistry } from '@angular-mdc/web/common';
export declare class MdcToolbarIcon {
    elementRef: ElementRef;
    isHostClass: boolean;
    constructor(elementRef: ElementRef);
}
export declare class MdcToolbarSection {
    alignStart: boolean;
    alignEnd: boolean;
    shrinkToFit: boolean;
    isHostClass: boolean;
    readonly classAlignStart: string;
    readonly classAlignEnd: string;
    readonly classShrinkToFit: string;
}
export declare class MdcToolbarTitle {
    elementRef: ElementRef;
    isHostClass: boolean;
    constructor(elementRef: ElementRef);
}
export declare class MdcToolbarFixedAdjust {
    elementRef: ElementRef;
    isHostClass: boolean;
    constructor(elementRef: ElementRef);
}
export declare class MdcToolbarRow {
    elementRef: ElementRef;
    isHostClass: boolean;
    constructor(elementRef: ElementRef);
}
export declare class MdcToolbarMenuIcon {
    elementRef: ElementRef;
    isHostClass: boolean;
    constructor(elementRef: ElementRef);
}
export declare class MdcToolbar implements AfterViewInit, OnChanges, OnDestroy {
    private _changeDetectorRef;
    private _renderer;
    elementRef: ElementRef;
    private _registry;
    private _fixedAdjustElement;
    private _flexible;
    flexibleDefaultBehavior: boolean;
    fixed: boolean;
    waterfall: boolean;
    fixedLastrow: boolean;
    adjustBodyMargin: boolean;
    flexible: boolean;
    fixedAdjustElement: any;
    change: EventEmitter<number>;
    firstRow: MdcToolbarRow;
    title: MdcToolbarTitle;
    isHostClass: boolean;
    readonly classFixedToolbar: string;
    readonly classWaterfallToolbar: string;
    readonly classFlexibleToolbar: string;
    readonly classFixedLastrow: string;
    readonly classFlexibleDefaultBehavior: string;
    private _mdcAdapter;
    private _foundation;
    constructor(_changeDetectorRef: ChangeDetectorRef, _renderer: Renderer2, elementRef: ElementRef, _registry: EventRegistry);
    ngOnChanges(changes: {
        [key: string]: SimpleChange;
    }): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    updateAdjustElementStyles(): void;
}
