/**
 * @license
 * Copyright (c) 2018 Dominic Carretto
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/trimox/angular-mdc-web/blob/master/LICENSE
 */
(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core')) :
    typeof define === 'function' && define.amd ? define('@angular-mdc/web/typography', ['exports', '@angular/core'], factory) :
    (factory((global.ng = global.ng || {}, global.ng.web = global.ng.web || {}, global.ng.web.typography = {}),global.ng.core));
}(this, (function (exports,core) { 'use strict';

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */
    var MdcTypography = /** @class */ (function () {
        function MdcTypography() {
            this.isHostClass = true;
        }
        MdcTypography.decorators = [
            { type: core.Directive, args: [{
                        selector: '[mdc-typography], [mdcTypography]'
                    },] },
        ];
        MdcTypography.propDecorators = {
            isHostClass: [{ type: core.HostBinding, args: ['class.mdc-typography',] }]
        };
        return MdcTypography;
    }());
    var MdcTypographyHeadline1 = /** @class */ (function () {
        function MdcTypographyHeadline1() {
            this.isHostClass = true;
        }
        MdcTypographyHeadline1.decorators = [
            { type: core.Directive, args: [{
                        selector: '[mdcHeadline1], [mdc-typography-display4]'
                    },] },
        ];
        MdcTypographyHeadline1.propDecorators = {
            isHostClass: [{ type: core.HostBinding, args: ['class.mdc-typography--headline1',] }]
        };
        return MdcTypographyHeadline1;
    }());
    var MdcTypographyHeadline2 = /** @class */ (function () {
        function MdcTypographyHeadline2() {
            this.isHostClass = true;
        }
        MdcTypographyHeadline2.decorators = [
            { type: core.Directive, args: [{
                        selector: '[mdcHeadline2], [mdc-typography-display3]'
                    },] },
        ];
        MdcTypographyHeadline2.propDecorators = {
            isHostClass: [{ type: core.HostBinding, args: ['class.mdc-typography--headline2',] }]
        };
        return MdcTypographyHeadline2;
    }());
    var MdcTypographyHeadline3 = /** @class */ (function () {
        function MdcTypographyHeadline3() {
            this.isHostClass = true;
        }
        MdcTypographyHeadline3.decorators = [
            { type: core.Directive, args: [{
                        selector: '[mdcHeadline3], [mdc-typography-display2]'
                    },] },
        ];
        MdcTypographyHeadline3.propDecorators = {
            isHostClass: [{ type: core.HostBinding, args: ['class.mdc-typography--headline3',] }]
        };
        return MdcTypographyHeadline3;
    }());
    var MdcTypographyHeadline4 = /** @class */ (function () {
        function MdcTypographyHeadline4() {
            this.isHostClass = true;
        }
        MdcTypographyHeadline4.decorators = [
            { type: core.Directive, args: [{
                        selector: '[mdcHeadline4], [mdc-typography-display1]'
                    },] },
        ];
        MdcTypographyHeadline4.propDecorators = {
            isHostClass: [{ type: core.HostBinding, args: ['class.mdc-typography--headline4',] }]
        };
        return MdcTypographyHeadline4;
    }());
    var MdcTypographyHeadline5 = /** @class */ (function () {
        function MdcTypographyHeadline5() {
            this.isHostClass = true;
        }
        MdcTypographyHeadline5.decorators = [
            { type: core.Directive, args: [{
                        selector: '[mdcHeadline5], [mdc-typography-headline]'
                    },] },
        ];
        MdcTypographyHeadline5.propDecorators = {
            isHostClass: [{ type: core.HostBinding, args: ['class.mdc-typography--headline5',] }]
        };
        return MdcTypographyHeadline5;
    }());
    var MdcTypographyHeadline6 = /** @class */ (function () {
        function MdcTypographyHeadline6() {
            this.isHostClass = true;
        }
        MdcTypographyHeadline6.decorators = [
            { type: core.Directive, args: [{
                        selector: '[mdcHeadline6], [mdc-typography-title]'
                    },] },
        ];
        MdcTypographyHeadline6.propDecorators = {
            isHostClass: [{ type: core.HostBinding, args: ['class.mdc-typography--headline6',] }]
        };
        return MdcTypographyHeadline6;
    }());
    var MdcTypographySubtitle1 = /** @class */ (function () {
        function MdcTypographySubtitle1() {
            this.isHostClass = true;
        }
        MdcTypographySubtitle1.decorators = [
            { type: core.Directive, args: [{
                        selector: '[mdcSubtitle1], [mdc-typography-subheading2]'
                    },] },
        ];
        MdcTypographySubtitle1.propDecorators = {
            isHostClass: [{ type: core.HostBinding, args: ['class.mdc-typography--subtitle1',] }]
        };
        return MdcTypographySubtitle1;
    }());
    var MdcTypographySubtitle2 = /** @class */ (function () {
        function MdcTypographySubtitle2() {
            this.isHostClass = true;
        }
        MdcTypographySubtitle2.decorators = [
            { type: core.Directive, args: [{
                        selector: '[mdcSubtitle2], [mdc-typography-subheading1]'
                    },] },
        ];
        MdcTypographySubtitle2.propDecorators = {
            isHostClass: [{ type: core.HostBinding, args: ['class.mdc-typography--subtitle2',] }]
        };
        return MdcTypographySubtitle2;
    }());
    var MdcTypographyBody2 = /** @class */ (function () {
        function MdcTypographyBody2() {
            this.isHostClass = true;
        }
        MdcTypographyBody2.decorators = [
            { type: core.Directive, args: [{
                        selector: '[mdcBody2], [mdc-typography-body2]'
                    },] },
        ];
        MdcTypographyBody2.propDecorators = {
            isHostClass: [{ type: core.HostBinding, args: ['class.mdc-typography--body2',] }]
        };
        return MdcTypographyBody2;
    }());
    var MdcTypographyBody1 = /** @class */ (function () {
        function MdcTypographyBody1() {
            this.isHostClass = true;
        }
        MdcTypographyBody1.decorators = [
            { type: core.Directive, args: [{
                        selector: '[mdcBody1], [mdc-typography-body1]'
                    },] },
        ];
        MdcTypographyBody1.propDecorators = {
            isHostClass: [{ type: core.HostBinding, args: ['class.mdc-typography--body1',] }]
        };
        return MdcTypographyBody1;
    }());
    var MdcTypographyCaption = /** @class */ (function () {
        function MdcTypographyCaption() {
            this.isHostClass = true;
        }
        MdcTypographyCaption.decorators = [
            { type: core.Directive, args: [{
                        selector: '[mdcCaption], [mdc-typography-caption]'
                    },] },
        ];
        MdcTypographyCaption.propDecorators = {
            isHostClass: [{ type: core.HostBinding, args: ['class.mdc-typography--caption',] }]
        };
        return MdcTypographyCaption;
    }());
    var MdcTypographyButton = /** @class */ (function () {
        function MdcTypographyButton() {
            this.isHostClass = true;
        }
        MdcTypographyButton.decorators = [
            { type: core.Directive, args: [{
                        selector: '[mdcButton]'
                    },] },
        ];
        MdcTypographyButton.propDecorators = {
            isHostClass: [{ type: core.HostBinding, args: ['class.mdc-typography--button',] }]
        };
        return MdcTypographyButton;
    }());
    var MdcTypographyOverline = /** @class */ (function () {
        function MdcTypographyOverline() {
            this.isHostClass = true;
        }
        MdcTypographyOverline.decorators = [
            { type: core.Directive, args: [{
                        selector: '[mdcOverline]'
                    },] },
        ];
        MdcTypographyOverline.propDecorators = {
            isHostClass: [{ type: core.HostBinding, args: ['class.mdc-typography--overline',] }]
        };
        return MdcTypographyOverline;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */
    var /** @type {?} */ TYPOGRAPHY_DECLARATIONS = [
        MdcTypography,
        MdcTypographyBody1,
        MdcTypographyBody2,
        MdcTypographyButton,
        MdcTypographyCaption,
        MdcTypographyHeadline1,
        MdcTypographyHeadline2,
        MdcTypographyHeadline3,
        MdcTypographyHeadline4,
        MdcTypographyHeadline5,
        MdcTypographyHeadline6,
        MdcTypographyOverline,
        MdcTypographySubtitle1,
        MdcTypographySubtitle2
    ];
    var MdcTypographyModule = /** @class */ (function () {
        function MdcTypographyModule() {
        }
        MdcTypographyModule.decorators = [
            { type: core.NgModule, args: [{
                        exports: TYPOGRAPHY_DECLARATIONS,
                        declarations: TYPOGRAPHY_DECLARATIONS,
                    },] },
        ];
        return MdcTypographyModule;
    }());

    exports.MdcTypographyModule = MdcTypographyModule;
    exports.MdcTypography = MdcTypography;
    exports.MdcTypographyHeadline1 = MdcTypographyHeadline1;
    exports.MdcTypographyHeadline2 = MdcTypographyHeadline2;
    exports.MdcTypographyHeadline3 = MdcTypographyHeadline3;
    exports.MdcTypographyHeadline4 = MdcTypographyHeadline4;
    exports.MdcTypographyHeadline5 = MdcTypographyHeadline5;
    exports.MdcTypographyHeadline6 = MdcTypographyHeadline6;
    exports.MdcTypographySubtitle1 = MdcTypographySubtitle1;
    exports.MdcTypographySubtitle2 = MdcTypographySubtitle2;
    exports.MdcTypographyBody2 = MdcTypographyBody2;
    exports.MdcTypographyBody1 = MdcTypographyBody1;
    exports.MdcTypographyCaption = MdcTypographyCaption;
    exports.MdcTypographyButton = MdcTypographyButton;
    exports.MdcTypographyOverline = MdcTypographyOverline;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
