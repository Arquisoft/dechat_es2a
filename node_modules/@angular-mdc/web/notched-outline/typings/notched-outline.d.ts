import { ChangeDetectorRef, ElementRef, OnDestroy, OnInit, Renderer2 } from '@angular/core';
export declare class MdcNotchedOutlineIdle {
    elementRef: ElementRef;
    isHostClass: boolean;
    constructor(elementRef: ElementRef);
}
export declare class MdcNotchedOutline implements OnInit, OnDestroy {
    private _changeDetectorRef;
    private _renderer;
    elementRef: ElementRef;
    outlineIdle: MdcNotchedOutlineIdle;
    private _outlineIdle;
    isHostClass: boolean;
    svgpath: ElementRef;
    private _mdcAdapter;
    _foundation: {
        init(): void;
        destroy(): void;
        notch(notchWidth: number, isRtl: boolean): void;
        closeNotch(): void;
    };
    constructor(_changeDetectorRef: ChangeDetectorRef, _renderer: Renderer2, elementRef: ElementRef);
    ngOnInit(): void;
    ngOnDestroy(): void;
    /**
     * Updates outline selectors and SVG path to open notch.
     */
    notch(notchWidth: number, isRtl: boolean): void;
    /**
     * Updates the outline selectors to close notch and return it to idle state.
     */
    closeNotch(): void;
    /** Retrieves the DOM element of the component host. */
    private _getHostElement();
}
