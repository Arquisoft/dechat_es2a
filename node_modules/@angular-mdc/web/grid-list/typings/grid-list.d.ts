import { AfterContentInit, AfterViewInit, ChangeDetectorRef, ElementRef, OnDestroy, QueryList, Renderer2 } from '@angular/core';
import { EventRegistry } from '@angular-mdc/web/common';
import { MdcIcon } from '@angular-mdc/web/icon';
export declare class MdcGridTileTitle {
    elementRef: ElementRef;
    isHostClass: boolean;
    constructor(elementRef: ElementRef);
}
export declare class MdcGridTileSupportText {
    elementRef: ElementRef;
    isHostClass: boolean;
    constructor(elementRef: ElementRef);
}
export declare class MdcGridTilePrimary {
    elementRef: ElementRef;
    isHostClass: boolean;
    constructor(elementRef: ElementRef);
}
export declare class MdcGridTilePrimaryContent {
    isHostClass: boolean;
}
export declare class MdcGridTileSecondary {
    elementRef: ElementRef;
    isHostClass: boolean;
    constructor(elementRef: ElementRef);
}
export declare class MdcGridTile {
    elementRef: ElementRef;
    isHostClass: boolean;
    constructor(elementRef: ElementRef);
}
export declare class MdcGridListTiles {
    elementRef: ElementRef;
    isHostClass: boolean;
    constructor(elementRef: ElementRef);
}
export declare class MdcGridList implements AfterViewInit, AfterContentInit, OnDestroy {
    private _changeDetectorRef;
    private _renderer;
    elementRef: ElementRef;
    private _registry;
    /** Emits whenever the component is destroyed. */
    private _destroy;
    narrow: boolean;
    protected _narrow: boolean;
    header: boolean;
    protected _header: boolean;
    aspect: string;
    protected _aspect: string;
    iconAlign: 'start' | 'end';
    isHostClass: boolean;
    tiles: QueryList<MdcGridTile>;
    captions: QueryList<MdcGridTileSupportText>;
    icons: QueryList<MdcIcon>;
    primaries: QueryList<MdcGridTilePrimary>;
    gridListTiles: MdcGridListTiles;
    readonly classGutter: string;
    readonly classheader: string;
    readonly classIconAlignStart: string;
    readonly classIconAlignEnd: string;
    private _mdcAdapter;
    private _foundation;
    constructor(_changeDetectorRef: ChangeDetectorRef, _renderer: Renderer2, elementRef: ElementRef, _registry: EventRegistry);
    ngAfterViewInit(): void;
    ngAfterContentInit(): void;
    ngOnDestroy(): void;
    setNarrow(narrow: boolean): void;
    setHeader(header: boolean): void;
    setAspect(aspect: string): void;
    getTile(index: number): MdcGridTile | undefined;
    alignCenter(): void;
    /** Retrieves the DOM element of the component host. */
    private _getHostElement();
    /** Make sure the aspect is supported. */
    protected _isAspectValid(aspect: string): boolean;
}
