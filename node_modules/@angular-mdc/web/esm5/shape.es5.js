/**
 * @license
 * Copyright (c) 2018 Dominic Carretto
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/trimox/angular-mdc-web/blob/master/LICENSE
 */
import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, HostBinding, Input, Renderer2, ViewEncapsulation, NgModule } from '@angular/core';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
var /** @type {?} */ MDC_VALID_SHAPE_CORNERS = [
    'top-left',
    'top-right',
    'bottom-right',
    'bottom-left'
];
var MdcShapeContainerCorner = /** @class */ (function () {
    function MdcShapeContainerCorner(_changeDetectorRef, elementRef, _renderer) {
        this._changeDetectorRef = _changeDetectorRef;
        this.elementRef = elementRef;
        this._renderer = _renderer;
        this.isHostClass = true;
    }
    Object.defineProperty(MdcShapeContainerCorner.prototype, "corner", {
        get: /**
         * @return {?}
         */
        function () { return this._corner; },
        set: /**
         * @param {?} corner
         * @return {?}
         */
        function (corner) {
            // If the directive is set without a name (updated programatically), then this setter will
            // trigger with an empty string and should not overwrite the programatically set value.
            if (!corner) {
                return;
            }
            this.setCorner(corner);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @param {?} corner
     * @return {?}
     */
    MdcShapeContainerCorner.prototype.setCorner = /**
     * @param {?} corner
     * @return {?}
     */
    function (corner) {
        if (this._isCornerValid(corner)) {
            var /** @type {?} */ cssClass = 'mdc-shape-container__corner--';
            this._renderer.removeClass(this._getHostElement(), "" + cssClass + this.corner);
            this._renderer.addClass(this._getHostElement(), "" + cssClass + corner);
            this._corner = corner;
            this._changeDetectorRef.markForCheck();
        }
    };
    /**
     * Retrieves the DOM element of the component host.
     * @return {?}
     */
    MdcShapeContainerCorner.prototype._getHostElement = /**
     * Retrieves the DOM element of the component host.
     * @return {?}
     */
    function () {
        return this.elementRef.nativeElement;
    };
    /** Make sure the corner value is supported. */
    /**
     * Make sure the corner value is supported.
     * @param {?} corner
     * @return {?}
     */
    MdcShapeContainerCorner.prototype._isCornerValid = /**
     * Make sure the corner value is supported.
     * @param {?} corner
     * @return {?}
     */
    function (corner) {
        return MDC_VALID_SHAPE_CORNERS.indexOf(corner) > -1 ? true : false;
    };
    MdcShapeContainerCorner.decorators = [
        { type: Component, args: [{selector: '[mdcShapeContainerCorner], mdc-shape-container-corner',
                    exportAs: 'mdcShapeContainerCorner',
                    template: '<ng-content></ng-content>',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    encapsulation: ViewEncapsulation.None
                },] },
    ];
    /** @nocollapse */
    MdcShapeContainerCorner.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: Renderer2 }
    ]; };
    MdcShapeContainerCorner.propDecorators = {
        isHostClass: [{ type: HostBinding, args: ['class.mdc-shape-container__corner',] }],
        corner: [{ type: Input, args: ['mdcShapeContainerCorner',] }]
    };
    return MdcShapeContainerCorner;
}());
var MdcShapeContainer = /** @class */ (function () {
    function MdcShapeContainer(elementRef) {
        this.elementRef = elementRef;
        this.isHostClass = true;
    }
    MdcShapeContainer.decorators = [
        { type: Component, args: [{selector: '[mdcShapeContainer], [mdc-shape-container], mdc-shape-container',
                    exportAs: 'mdcShapeContainer',
                    template: '<ng-content></ng-content>',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    encapsulation: ViewEncapsulation.None
                },] },
    ];
    /** @nocollapse */
    MdcShapeContainer.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    MdcShapeContainer.propDecorators = {
        isHostClass: [{ type: HostBinding, args: ['class.mdc-shape-container',] }]
    };
    return MdcShapeContainer;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
var /** @type {?} */ SHAPE_DECLARATIONS = [
    MdcShapeContainer,
    MdcShapeContainerCorner
];
var MdcShapeModule = /** @class */ (function () {
    function MdcShapeModule() {
    }
    MdcShapeModule.decorators = [
        { type: NgModule, args: [{
                    exports: [SHAPE_DECLARATIONS],
                    declarations: [SHAPE_DECLARATIONS]
                },] },
    ];
    return MdcShapeModule;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

export { MdcShapeModule, MdcShapeContainerCorner, MdcShapeContainer };
