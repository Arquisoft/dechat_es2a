/**
 * @license
 * Copyright (c) 2018 Dominic Carretto
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/trimox/angular-mdc-web/blob/master/LICENSE
 */
import { Directive, HostBinding, NgModule } from '@angular/core';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
class MdcTypography {
    constructor() {
        this.isHostClass = true;
    }
}
MdcTypography.decorators = [
    { type: Directive, args: [{
                selector: '[mdc-typography], [mdcTypography]'
            },] },
];
MdcTypography.propDecorators = {
    isHostClass: [{ type: HostBinding, args: ['class.mdc-typography',] }]
};
class MdcTypographyHeadline1 {
    constructor() {
        this.isHostClass = true;
    }
}
MdcTypographyHeadline1.decorators = [
    { type: Directive, args: [{
                selector: '[mdcHeadline1], [mdc-typography-display4]'
            },] },
];
MdcTypographyHeadline1.propDecorators = {
    isHostClass: [{ type: HostBinding, args: ['class.mdc-typography--headline1',] }]
};
class MdcTypographyHeadline2 {
    constructor() {
        this.isHostClass = true;
    }
}
MdcTypographyHeadline2.decorators = [
    { type: Directive, args: [{
                selector: '[mdcHeadline2], [mdc-typography-display3]'
            },] },
];
MdcTypographyHeadline2.propDecorators = {
    isHostClass: [{ type: HostBinding, args: ['class.mdc-typography--headline2',] }]
};
class MdcTypographyHeadline3 {
    constructor() {
        this.isHostClass = true;
    }
}
MdcTypographyHeadline3.decorators = [
    { type: Directive, args: [{
                selector: '[mdcHeadline3], [mdc-typography-display2]'
            },] },
];
MdcTypographyHeadline3.propDecorators = {
    isHostClass: [{ type: HostBinding, args: ['class.mdc-typography--headline3',] }]
};
class MdcTypographyHeadline4 {
    constructor() {
        this.isHostClass = true;
    }
}
MdcTypographyHeadline4.decorators = [
    { type: Directive, args: [{
                selector: '[mdcHeadline4], [mdc-typography-display1]'
            },] },
];
MdcTypographyHeadline4.propDecorators = {
    isHostClass: [{ type: HostBinding, args: ['class.mdc-typography--headline4',] }]
};
class MdcTypographyHeadline5 {
    constructor() {
        this.isHostClass = true;
    }
}
MdcTypographyHeadline5.decorators = [
    { type: Directive, args: [{
                selector: '[mdcHeadline5], [mdc-typography-headline]'
            },] },
];
MdcTypographyHeadline5.propDecorators = {
    isHostClass: [{ type: HostBinding, args: ['class.mdc-typography--headline5',] }]
};
class MdcTypographyHeadline6 {
    constructor() {
        this.isHostClass = true;
    }
}
MdcTypographyHeadline6.decorators = [
    { type: Directive, args: [{
                selector: '[mdcHeadline6], [mdc-typography-title]'
            },] },
];
MdcTypographyHeadline6.propDecorators = {
    isHostClass: [{ type: HostBinding, args: ['class.mdc-typography--headline6',] }]
};
class MdcTypographySubtitle1 {
    constructor() {
        this.isHostClass = true;
    }
}
MdcTypographySubtitle1.decorators = [
    { type: Directive, args: [{
                selector: '[mdcSubtitle1], [mdc-typography-subheading2]'
            },] },
];
MdcTypographySubtitle1.propDecorators = {
    isHostClass: [{ type: HostBinding, args: ['class.mdc-typography--subtitle1',] }]
};
class MdcTypographySubtitle2 {
    constructor() {
        this.isHostClass = true;
    }
}
MdcTypographySubtitle2.decorators = [
    { type: Directive, args: [{
                selector: '[mdcSubtitle2], [mdc-typography-subheading1]'
            },] },
];
MdcTypographySubtitle2.propDecorators = {
    isHostClass: [{ type: HostBinding, args: ['class.mdc-typography--subtitle2',] }]
};
class MdcTypographyBody2 {
    constructor() {
        this.isHostClass = true;
    }
}
MdcTypographyBody2.decorators = [
    { type: Directive, args: [{
                selector: '[mdcBody2], [mdc-typography-body2]'
            },] },
];
MdcTypographyBody2.propDecorators = {
    isHostClass: [{ type: HostBinding, args: ['class.mdc-typography--body2',] }]
};
class MdcTypographyBody1 {
    constructor() {
        this.isHostClass = true;
    }
}
MdcTypographyBody1.decorators = [
    { type: Directive, args: [{
                selector: '[mdcBody1], [mdc-typography-body1]'
            },] },
];
MdcTypographyBody1.propDecorators = {
    isHostClass: [{ type: HostBinding, args: ['class.mdc-typography--body1',] }]
};
class MdcTypographyCaption {
    constructor() {
        this.isHostClass = true;
    }
}
MdcTypographyCaption.decorators = [
    { type: Directive, args: [{
                selector: '[mdcCaption], [mdc-typography-caption]'
            },] },
];
MdcTypographyCaption.propDecorators = {
    isHostClass: [{ type: HostBinding, args: ['class.mdc-typography--caption',] }]
};
class MdcTypographyButton {
    constructor() {
        this.isHostClass = true;
    }
}
MdcTypographyButton.decorators = [
    { type: Directive, args: [{
                selector: '[mdcButton]'
            },] },
];
MdcTypographyButton.propDecorators = {
    isHostClass: [{ type: HostBinding, args: ['class.mdc-typography--button',] }]
};
class MdcTypographyOverline {
    constructor() {
        this.isHostClass = true;
    }
}
MdcTypographyOverline.decorators = [
    { type: Directive, args: [{
                selector: '[mdcOverline]'
            },] },
];
MdcTypographyOverline.propDecorators = {
    isHostClass: [{ type: HostBinding, args: ['class.mdc-typography--overline',] }]
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
const /** @type {?} */ TYPOGRAPHY_DECLARATIONS = [
    MdcTypography,
    MdcTypographyBody1,
    MdcTypographyBody2,
    MdcTypographyButton,
    MdcTypographyCaption,
    MdcTypographyHeadline1,
    MdcTypographyHeadline2,
    MdcTypographyHeadline3,
    MdcTypographyHeadline4,
    MdcTypographyHeadline5,
    MdcTypographyHeadline6,
    MdcTypographyOverline,
    MdcTypographySubtitle1,
    MdcTypographySubtitle2
];
class MdcTypographyModule {
}
MdcTypographyModule.decorators = [
    { type: NgModule, args: [{
                exports: TYPOGRAPHY_DECLARATIONS,
                declarations: TYPOGRAPHY_DECLARATIONS,
            },] },
];

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

export { MdcTypographyModule, MdcTypography, MdcTypographyHeadline1, MdcTypographyHeadline2, MdcTypographyHeadline3, MdcTypographyHeadline4, MdcTypographyHeadline5, MdcTypographyHeadline6, MdcTypographySubtitle1, MdcTypographySubtitle2, MdcTypographyBody2, MdcTypographyBody1, MdcTypographyCaption, MdcTypographyButton, MdcTypographyOverline };
