/**
 * @license
 * Copyright (c) 2018 Dominic Carretto
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/trimox/angular-mdc-web/blob/master/LICENSE
 */
import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Directive, ElementRef, HostBinding, Input, ViewEncapsulation, NgModule } from '@angular/core';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
class MdcImageListItem {
    /**
     * @param {?} elementRef
     */
    constructor(elementRef) {
        this.elementRef = elementRef;
        this.isHostClass = true;
    }
}
MdcImageListItem.decorators = [
    { type: Directive, args: [{
                selector: '[mdcImageListItem], mdc-image-list-item',
                exportAs: 'mdcImageListItem'
            },] },
];
/** @nocollapse */
MdcImageListItem.ctorParameters = () => [
    { type: ElementRef }
];
MdcImageListItem.propDecorators = {
    isHostClass: [{ type: HostBinding, args: ['class.mdc-image-list__item',] }]
};
class MdcImageListImageAspect {
    /**
     * @param {?} elementRef
     */
    constructor(elementRef) {
        this.elementRef = elementRef;
    }
}
MdcImageListImageAspect.decorators = [
    { type: Component, args: [{selector: '[mdcImageListImageAspect], mdc-image-list-image-aspect',
                exportAs: 'mdcImageListImageAspect',
                template: `
  <div class="mdc-image-list__image-aspect-container">
    <ng-content></ng-content>
  </div>
  `,
                encapsulation: ViewEncapsulation.None
            },] },
];
/** @nocollapse */
MdcImageListImageAspect.ctorParameters = () => [
    { type: ElementRef }
];
class MdcImageListImage {
    /**
     * @param {?} elementRef
     */
    constructor(elementRef) {
        this.elementRef = elementRef;
        this.isHostClass = true;
    }
}
MdcImageListImage.decorators = [
    { type: Directive, args: [{
                selector: '[mdcImageListImage], mdc-image-list-image',
                exportAs: 'mdcImageListImage'
            },] },
];
/** @nocollapse */
MdcImageListImage.ctorParameters = () => [
    { type: ElementRef }
];
MdcImageListImage.propDecorators = {
    isHostClass: [{ type: HostBinding, args: ['class.mdc-image-list__image',] }]
};
class MdcImageListSupporting {
    /**
     * @param {?} elementRef
     */
    constructor(elementRef) {
        this.elementRef = elementRef;
        this.isHostClass = true;
    }
}
MdcImageListSupporting.decorators = [
    { type: Directive, args: [{
                selector: '[mdcImageListSupporting], mdc-image-list-supporting',
                exportAs: 'mdcImageListSupporting',
            },] },
];
/** @nocollapse */
MdcImageListSupporting.ctorParameters = () => [
    { type: ElementRef }
];
MdcImageListSupporting.propDecorators = {
    isHostClass: [{ type: HostBinding, args: ['class.mdc-image-list__supporting',] }]
};
class MdcImageListLabel {
    /**
     * @param {?} elementRef
     */
    constructor(elementRef) {
        this.elementRef = elementRef;
        this.isHostClass = true;
    }
}
MdcImageListLabel.decorators = [
    { type: Directive, args: [{
                selector: '[mdcImageListLabel], mdc-image-list-label',
                exportAs: 'mdcImageListLabel'
            },] },
];
/** @nocollapse */
MdcImageListLabel.ctorParameters = () => [
    { type: ElementRef }
];
MdcImageListLabel.propDecorators = {
    isHostClass: [{ type: HostBinding, args: ['class.mdc-image-list__label',] }]
};
class MdcImageList {
    /**
     * @param {?} _changeDetectorRef
     * @param {?} elementRef
     */
    constructor(_changeDetectorRef, elementRef) {
        this._changeDetectorRef = _changeDetectorRef;
        this.elementRef = elementRef;
        this.isHostClass = true;
    }
    /**
     * @return {?}
     */
    get masonry() { return this._masonry; }
    /**
     * @param {?} value
     * @return {?}
     */
    set masonry(value) {
        this.setMasonry(value);
    }
    /**
     * @return {?}
     */
    get textProtection() { return this._textProtection; }
    /**
     * @param {?} value
     * @return {?}
     */
    set textProtection(value) {
        this.setTextProtection(value);
    }
    /**
     * @return {?}
     */
    get classMasonry() {
        return this.masonry ? 'mdc-image-list--masonry' : '';
    }
    /**
     * @return {?}
     */
    get classTextProtection() {
        return this.textProtection ? 'mdc-image-list--with-text-protection' : '';
    }
    /**
     * @param {?} masonry
     * @return {?}
     */
    setMasonry(masonry) {
        this._masonry = masonry;
        this._changeDetectorRef.markForCheck();
    }
    /**
     * @param {?} textProtection
     * @return {?}
     */
    setTextProtection(textProtection) {
        this._textProtection = textProtection;
        this._changeDetectorRef.markForCheck();
    }
}
MdcImageList.decorators = [
    { type: Component, args: [{selector: '[mdc-image-list], mdc-image-list',
                exportAs: 'mdcImageList',
                template: '<ng-content></ng-content>',
                changeDetection: ChangeDetectionStrategy.OnPush,
                encapsulation: ViewEncapsulation.None
            },] },
];
/** @nocollapse */
MdcImageList.ctorParameters = () => [
    { type: ChangeDetectorRef },
    { type: ElementRef }
];
MdcImageList.propDecorators = {
    masonry: [{ type: Input }],
    textProtection: [{ type: Input }],
    isHostClass: [{ type: HostBinding, args: ['class.mdc-image-list',] }],
    classMasonry: [{ type: HostBinding, args: ['class.mdc-image-list--masonry',] }],
    classTextProtection: [{ type: HostBinding, args: ['class.mdc-image-list--with-text-protection',] }]
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
const /** @type {?} */ IMAGE_LIST_DECLARATIONS = [
    MdcImageList,
    MdcImageListImage,
    MdcImageListImageAspect,
    MdcImageListItem,
    MdcImageListLabel,
    MdcImageListSupporting
];
class MdcImageListModule {
}
MdcImageListModule.decorators = [
    { type: NgModule, args: [{
                exports: IMAGE_LIST_DECLARATIONS,
                declarations: IMAGE_LIST_DECLARATIONS,
            },] },
];

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

export { MdcImageListModule, MdcImageListItem, MdcImageListImageAspect, MdcImageListImage, MdcImageListSupporting, MdcImageListLabel, MdcImageList };
