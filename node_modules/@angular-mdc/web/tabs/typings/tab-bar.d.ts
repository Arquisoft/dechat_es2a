import { AfterContentInit, ChangeDetectorRef, ElementRef, EventEmitter, NgZone, OnDestroy, QueryList, Renderer2 } from '@angular/core';
import { EventRegistry } from '@angular-mdc/web/common';
import { Observable } from 'rxjs';
import { MdcTab, MdcTabSelected } from './tab';
/** A simple change event emitted selection changes. */
export declare class MdcTabChangeEvent {
    /** Index of the currently-selected tab. */
    index: number;
    /** Reference to the currently-selected tab. */
    tab: MdcTab;
    constructor(
        /** Index of the currently-selected tab. */
        index: number, 
        /** Reference to the currently-selected tab. */
        tab: MdcTab);
}
export declare class MdcTabBarIndicator {
    elementRef: ElementRef;
    isHostClass: boolean;
    constructor(elementRef: ElementRef);
}
export declare class MdcTabBar implements AfterContentInit, OnDestroy {
    private _ngZone;
    private _changeDetectorRef;
    private _renderer;
    elementRef: ElementRef;
    private _registry;
    /** Emits whenever the component is destroyed. */
    private _destroy;
    private _disableRipple;
    private _primary;
    private _secondary;
    /** The tab index that should be selected after the content has been checked. */
    private _indexToSelect;
    /** The index of the active tab. */
    selectedIndex: number | null;
    private _selectedIndex;
    primary: boolean;
    secondary: boolean;
    disableRipple: boolean;
    /** Event emitted when the tab selection has changed. */
    readonly selectedTabChange: EventEmitter<MdcTabChangeEvent>;
    /** Event emitted when tabs are added or removed. */
    readonly tabsChangeEvent: EventEmitter<void>;
    tabs: QueryList<MdcTab>;
    indicator: MdcTabBarIndicator;
    isHostClass: boolean;
    scrollFrameContent: boolean;
    role: string;
    readonly classTabIcon: string;
    readonly classTabIconText: string;
    readonly classPrimary: string;
    readonly classSecondary: string;
    /** Combined stream of all of the tab change events. */
    readonly optionSelectionChanges: Observable<MdcTabSelected>;
    private _mdcAdapter;
    private _foundation;
    constructor(_ngZone: NgZone, _changeDetectorRef: ChangeDetectorRef, _renderer: Renderer2, elementRef: ElementRef, _registry: EventRegistry);
    ngAfterContentInit(): void;
    ngOnDestroy(): void;
    private _initializeSelection();
    setDisableRipple(disabled: boolean): void;
    setTabActiveAtIndex(index: number): void;
    getActiveTabIndex(): number;
    getActiveTab(): MdcTab | null;
    setActiveTab(tab: MdcTab, active: boolean): void;
    layout(): void;
    getNumberOfTabs(): number;
    getComputedWidth(): number;
    setPreventDefaultOnClickForTabAtIndex(index: number, preventDefaultOnClick: boolean): void;
    isDefaultPreventedOnClickForTabAtIndex(index: number): boolean;
}
