import { AfterContentInit, AfterViewInit, ElementRef, OnDestroy, Renderer2 } from '@angular/core';
import { EventRegistry } from '@angular-mdc/web/common';
import { MdcIcon } from '@angular-mdc/web/icon';
import { MdcTab } from './tab';
import { MdcTabBar } from './tab-bar';
export declare class MdcTabBarScrollBack implements AfterContentInit {
    private _renderer;
    elementRef: ElementRef;
    isHostClass: boolean;
    isBackClass: boolean;
    icon: MdcIcon;
    constructor(_renderer: Renderer2, elementRef: ElementRef);
    ngAfterContentInit(): void;
}
export declare class MdcTabBarScrollForward implements AfterContentInit {
    private _renderer;
    elementRef: ElementRef;
    isHostClass: boolean;
    isForwardClass: boolean;
    icon: MdcIcon;
    constructor(_renderer: Renderer2, elementRef: ElementRef);
    ngAfterContentInit(): void;
}
export declare class MdcTabBarScrollFrame implements AfterContentInit {
    elementRef: ElementRef;
    isHostClass: boolean;
    tabBar: MdcTabBar;
    constructor(elementRef: ElementRef);
    ngAfterContentInit(): void;
    findTab(index: number): MdcTab;
}
export declare class MdcTabBarScroller implements AfterViewInit, AfterContentInit, OnDestroy {
    private _renderer;
    elementRef: ElementRef;
    private _registry;
    direction: 'ltr' | 'rtl';
    isHostClass: boolean;
    scrollFrame: MdcTabBarScrollFrame;
    back: MdcTabBarScrollBack;
    forward: MdcTabBarScrollForward;
    /** Subscription to tabs being added/removed. */
    private _tabBarChangeSubscription;
    private _mdcAdapter;
    private _foundation;
    constructor(_renderer: Renderer2, elementRef: ElementRef, _registry: EventRegistry);
    ngAfterViewInit(): void;
    ngAfterContentInit(): void;
    ngOnDestroy(): void;
    scrollToTabAtIndex(index: number): void;
    layout(): void;
    scrollBack(event?: Event): void;
    scrollForward(event?: Event): void;
}
