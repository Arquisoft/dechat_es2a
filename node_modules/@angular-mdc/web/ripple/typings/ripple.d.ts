import { AfterContentInit, ChangeDetectorRef, ElementRef, NgZone, OnDestroy, Renderer2 } from '@angular/core';
import { MdcRipple } from './ripple.service';
export declare class MdcRippleComponent implements AfterContentInit, OnDestroy {
    private _ngZone;
    protected _changeDetectorRef: ChangeDetectorRef;
    protected _ripple: MdcRipple;
    protected _renderer: Renderer2;
    protected elementRef: ElementRef;
    readonly ripple: MdcRipple;
    primary: boolean;
    protected _primary: boolean;
    secondary: boolean;
    protected _secondary: boolean;
    disabled: boolean;
    private _disabled;
    attachTo: any;
    protected _attachTo: any;
    unbounded: boolean;
    protected _unbounded: boolean;
    constructor(_ngZone: NgZone, _changeDetectorRef: ChangeDetectorRef, _ripple: MdcRipple, _renderer: Renderer2, elementRef: ElementRef);
    ngAfterContentInit(): void;
    ngOnDestroy(): void;
    setUnbounded(unbounded: boolean): void;
    setAttachTo(element: any, unbounded?: boolean): void;
    setPrimary(primary: boolean): void;
    setSecondary(secondary: boolean): void;
    /** Retrieves the DOM element of the component host. */
    private _getHostElement();
}
export declare class MdcRippleDirective extends MdcRippleComponent {
    constructor(_ngZone: NgZone, _changeDetectorRef: ChangeDetectorRef, _ripple: MdcRipple, _renderer: Renderer2, elementRef: ElementRef);
}
