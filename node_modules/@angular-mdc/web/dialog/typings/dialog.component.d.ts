import { AfterViewInit, ElementRef, EventEmitter, OnDestroy, QueryList, Renderer2 } from '@angular/core';
import { EventRegistry } from '@angular-mdc/web/common';
import { MdcDialogBody, MdcDialogButton, MdcDialogSurface } from './dialog-directives';
import { MdcDialogConfig } from './dialog-config';
import { MdcDialogRef } from './dialog-ref';
export declare class MdcDialogComponent implements AfterViewInit, OnDestroy {
    private _renderer;
    elementRef: ElementRef;
    private _registry;
    dialogRef: MdcDialogRef<any>;
    _config: MdcDialogConfig;
    private _focusTrap;
    /** ID of the element that should be considered as the dialog's label. */
    _ariaLabelledBy: string | null;
    clickOutsideToClose: boolean;
    escapeToClose: boolean;
    isHostClass: boolean;
    ariaHidden: string;
    tabIndex: number;
    _accept: EventEmitter<string>;
    _cancel: EventEmitter<string>;
    dialogSurface: MdcDialogSurface;
    dialogBody: MdcDialogBody;
    dialogButtons: QueryList<MdcDialogButton>;
    private _mdcAdapter;
    private _foundation;
    constructor(_renderer: Renderer2, elementRef: ElementRef, _registry: EventRegistry, dialogRef: MdcDialogRef<any>);
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    private _onKeyDown(event);
    show(): void;
    close(): void;
    isOpen(): boolean;
    accept(shouldNotify?: boolean): void;
    cancel(shouldNotify?: boolean): void;
}
