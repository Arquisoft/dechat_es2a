{"remainingRequest":"C:\\Users\\Becario\\Arquitectura\\dechat_es2a\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!C:\\Users\\Becario\\Arquitectura\\dechat_es2a\\node_modules\\@angular-mdc\\web\\esm5\\elevation.es5.js","dependencies":[{"path":"C:\\Users\\Becario\\Arquitectura\\dechat_es2a\\node_modules\\@angular-mdc\\web\\esm5\\elevation.es5.js","mtime":1556004096876},{"path":"C:\\Users\\Becario\\Arquitectura\\dechat_es2a\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1556004112812},{"path":"C:\\Users\\Becario\\Arquitectura\\dechat_es2a\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1556004088045}],"contextDependencies":[],"result":["/**\n * @license\n * Copyright (c) 2018 Dominic Carretto\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/trimox/angular-mdc-web/blob/master/LICENSE\n */\n/** PURE_IMPORTS_START _angular_core,_angular_mdc_web_common PURE_IMPORTS_END */\nimport { Directive, ElementRef, Input, Renderer2, NgModule } from '@angular/core';\nimport { toNumber } from '@angular-mdc/web/common';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar MdcElevation = /** @class */ /*@__PURE__*/ (function () {\n    function MdcElevation(_renderer, elementRef) {\n        this._renderer = _renderer;\n        this.elementRef = elementRef;\n        this._mdcElevation = 0;\n    }\n    Object.defineProperty(MdcElevation.prototype, \"mdcElevation\", {\n        get: /**\n         * @return {?}\n         */ function () { return this._mdcElevation; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this._mdcElevation = toNumber(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    MdcElevation.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n        function (changes) {\n            var /** @type {?} */ change = changes['mdcElevation'];\n            if (toNumber(change.currentValue) < 0 || toNumber(change.currentValue > 24)) {\n                throw new Error(\"Valid mdc-elevation values are 0 through 24\");\n            }\n            if (!change.isFirstChange()) {\n                this._renderer.removeClass(this.elementRef.nativeElement, \"mdc-elevation--z\" + change.previousValue);\n            }\n            this._renderer.addClass(this.elementRef.nativeElement, \"mdc-elevation--z\" + change.currentValue);\n        };\n    return MdcElevation;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar /** @type {?} */ ELEVATION_DIRECTIVES = [\n    MdcElevation\n];\nvar MdcElevationModule = /** @class */ /*@__PURE__*/ (function () {\n    function MdcElevationModule() {\n    }\n    return MdcElevationModule;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nexport { MdcElevationModule, MdcElevation };\n",null]}