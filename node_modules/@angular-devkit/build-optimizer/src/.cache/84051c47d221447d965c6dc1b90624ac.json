{"remainingRequest":"C:\\Users\\rauls\\OneDrive\\Documentos\\dechat_es2a\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!C:\\Users\\rauls\\OneDrive\\Documentos\\dechat_es2a\\node_modules\\@angular-mdc\\web\\esm5\\linear-progress.es5.js","dependencies":[{"path":"C:\\Users\\rauls\\OneDrive\\Documentos\\dechat_es2a\\node_modules\\@angular-mdc\\web\\esm5\\linear-progress.es5.js","mtime":1554924123942},{"path":"C:\\Users\\rauls\\OneDrive\\Documentos\\dechat_es2a\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1554924186691},{"path":"C:\\Users\\rauls\\OneDrive\\Documentos\\dechat_es2a\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1554924110461}],"contextDependencies":[],"result":["/**\n * @license\n * Copyright (c) 2018 Dominic Carretto\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/trimox/angular-mdc-web/blob/master/LICENSE\n */\n/** PURE_IMPORTS_START _angular_core PURE_IMPORTS_END */\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, HostBinding, Input, Renderer2, ViewEncapsulation, NgModule } from '@angular/core';\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\nfunction _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor)\n            descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps)\n        _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps)\n        _defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n            value: subClass,\n            enumerable: false,\n            writable: true,\n            configurable: true\n        }\n    });\n    if (superClass)\n        Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\nfunction _assertThisInitialized(self) {\n    if (self === void 0) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n    return self;\n}\nfunction _possibleConstructorReturn(self, call) {\n    if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n        return call;\n    }\n    return _assertThisInitialized(self);\n}\n/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @template A\n */\nvar MDCFoundation = \n/*#__PURE__*/\n/*@__PURE__*/ function () {\n    _createClass(MDCFoundation, null, [{\n            key: \"cssClasses\",\n            /** @return enum{cssClasses} */\n            get: function get() {\n                // Classes extending MDCFoundation should implement this method to return an object which exports every\n                // CSS class the foundation class needs as a property. e.g. {ACTIVE: 'mdc-component--active'}\n                return {};\n            }\n            /** @return enum{strings} */\n        }, {\n            key: \"strings\",\n            get: function get() {\n                // Classes extending MDCFoundation should implement this method to return an object which exports all\n                // semantic strings as constants. e.g. {ARIA_ROLE: 'tablist'}\n                return {};\n            }\n            /** @return enum{numbers} */\n        }, {\n            key: \"numbers\",\n            get: function get() {\n                // Classes extending MDCFoundation should implement this method to return an object which exports all\n                // of its semantic numbers as constants. e.g. {ANIMATION_DELAY_MS: 350}\n                return {};\n            }\n            /** @return {!Object} */\n        }, {\n            key: \"defaultAdapter\",\n            get: function get() {\n                // Classes extending MDCFoundation may choose to implement this getter in order to provide a convenient\n                // way of viewing the necessary methods of an adapter. In the future, this could also be used for adapter\n                // validation.\n                return {};\n            }\n            /**\n             * @param {A=} adapter\n             */\n        }]);\n    function MDCFoundation() {\n        var adapter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        _classCallCheck(this, MDCFoundation);\n        /** @protected {!A} */\n        this.adapter_ = adapter;\n    }\n    _createClass(MDCFoundation, [{\n            key: \"init\",\n            value: function init() {\n            }\n        }, {\n            key: \"destroy\",\n            value: function destroy() {\n            }\n        }]);\n    return MDCFoundation;\n}();\n/**\n * @template F\n */\nvar MDCComponent = \n/*#__PURE__*/\n/*@__PURE__*/ function () {\n    _createClass(MDCComponent, null, [{\n            key: \"attachTo\",\n            /**\n             * @param {!Element} root\n             * @return {!MDCComponent}\n             */\n            value: function attachTo(root) {\n                // Subclasses which extend MDCBase should provide an attachTo() method that takes a root element and\n                // returns an instantiated component with its root set to that element. Also note that in the cases of\n                // subclasses, an explicit foundation class will not have to be passed in; it will simply be initialized\n                // from getDefaultFoundation().\n                return new MDCComponent(root, new MDCFoundation());\n            }\n            /**\n             * @param {!Element} root\n             * @param {F=} foundation\n             * @param {...?} args\n             */\n        }]);\n    function MDCComponent(root) {\n        var foundation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n        _classCallCheck(this, MDCComponent);\n        /** @protected {!Element} */\n        this.root_ = root;\n        for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n            args[_key - 2] = arguments[_key];\n        }\n        this.initialize.apply(this, args); // Note that we initialize foundation here and not within the constructor's default param so that\n        // this.root_ is defined and can be used within the foundation class.\n        /** @protected {!F} */\n        this.foundation_ = foundation === undefined ? this.getDefaultFoundation() : foundation;\n        this.foundation_.init();\n        this.initialSyncWithDOM();\n    }\n    _createClass(MDCComponent, [{\n            key: \"initialize\",\n            value: function initialize() { } // Subclasses can override this to do any additional setup work that would be considered part of a\n            // \"constructor\". Essentially, it is a hook into the parent constructor before the foundation is\n            // initialized. Any additional arguments besides root and foundation will be passed in here.\n            /**\n             * @return {!F} foundation\n             */\n        }, {\n            key: \"getDefaultFoundation\",\n            value: function getDefaultFoundation() {\n                // Subclasses must override this method to return a properly configured foundation class for the\n                // component.\n                throw new Error('Subclasses must override getDefaultFoundation to return a properly configured ' + 'foundation class');\n            }\n        }, {\n            key: \"initialSyncWithDOM\",\n            value: function initialSyncWithDOM() {\n                // object. An example of this would be a form control wrapper that needs to synchronize its internal state\n                // to some property or attribute of the host DOM. Please note: this is *not* the place to perform DOM\n                // reads/writes that would cause layout / paint, as this is called synchronously from within the constructor.\n            }\n        }, {\n            key: \"destroy\",\n            value: function destroy() {\n                // Subclasses may implement this method to release any resources / deregister any listeners they have\n                // attached. An example of this might be deregistering a resize event from the window object.\n                this.foundation_.destroy();\n            }\n            /**\n             * Wrapper method to add an event listener to the component's root element. This is most useful when\n             * listening for custom events.\n             * @param {string} evtType\n             * @param {!Function} handler\n             */\n        }, {\n            key: \"listen\",\n            value: function listen(evtType, handler) {\n                this.root_.addEventListener(evtType, handler);\n            }\n            /**\n             * Wrapper method to remove an event listener to the component's root element. This is most useful when\n             * unlistening for custom events.\n             * @param {string} evtType\n             * @param {!Function} handler\n             */\n        }, {\n            key: \"unlisten\",\n            value: function unlisten(evtType, handler) {\n                this.root_.removeEventListener(evtType, handler);\n            }\n            /**\n             * Fires a cross-browser-compatible custom event from the component root of the given type,\n             * with the given data.\n             * @param {string} evtType\n             * @param {!Object} evtData\n             * @param {boolean=} shouldBubble\n             */\n        }, {\n            key: \"emit\",\n            value: function emit(evtType, evtData) {\n                var shouldBubble = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n                var evt;\n                if (typeof CustomEvent === 'function') {\n                    evt = new CustomEvent(evtType, {\n                        detail: evtData,\n                        bubbles: shouldBubble\n                    });\n                }\n                else {\n                    evt = document.createEvent('CustomEvent');\n                    evt.initCustomEvent(evtType, shouldBubble, false, evtData);\n                }\n                this.root_.dispatchEvent(evt);\n            }\n        }]);\n    return MDCComponent;\n}();\n/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// property names.\nvar transformStyleProperties = ['transform', 'WebkitTransform', 'MozTransform', 'OTransform', 'MSTransform'];\n/**\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar cssClasses = {\n    CLOSED_CLASS: 'mdc-linear-progress--closed',\n    INDETERMINATE_CLASS: 'mdc-linear-progress--indeterminate',\n    REVERSED_CLASS: 'mdc-linear-progress--reversed'\n};\nvar strings = {\n    PRIMARY_BAR_SELECTOR: '.mdc-linear-progress__primary-bar',\n    BUFFER_SELECTOR: '.mdc-linear-progress__buffer'\n};\nvar MDCLinearProgressFoundation = \n/*#__PURE__*/\nfunction (_MDCFoundation) {\n    _inherits(MDCLinearProgressFoundation, _MDCFoundation);\n    _createClass(MDCLinearProgressFoundation, null, [{\n            key: \"cssClasses\",\n            get: function get() {\n                return cssClasses;\n            }\n        }, {\n            key: \"strings\",\n            get: function get() {\n                return strings;\n            }\n        }, {\n            key: \"defaultAdapter\",\n            get: function get() {\n                return {\n                    addClass: function addClass() { },\n                    getPrimaryBar: function getPrimaryBar() { },\n                    getBuffer: function getBuffer() { },\n                    hasClass: function hasClass() {\n                        return (\n                        /* className: string */\n                        false);\n                    },\n                    removeClass: function removeClass() { },\n                    setStyle: function setStyle() { }\n                };\n            }\n        }]);\n    function MDCLinearProgressFoundation(adapter) {\n        _classCallCheck(this, MDCLinearProgressFoundation);\n        return _possibleConstructorReturn(this, (MDCLinearProgressFoundation.__proto__ || Object.getPrototypeOf(MDCLinearProgressFoundation)).call(this, Object.assign(MDCLinearProgressFoundation.defaultAdapter, adapter)));\n    }\n    _createClass(MDCLinearProgressFoundation, [{\n            key: \"init\",\n            value: function init() {\n                this.determinate_ = !this.adapter_.hasClass(cssClasses.INDETERMINATE_CLASS);\n                this.reverse_ = this.adapter_.hasClass(cssClasses.REVERSED_CLASS);\n                this.progress_ = 0;\n            }\n        }, {\n            key: \"setDeterminate\",\n            value: function setDeterminate(isDeterminate) {\n                this.determinate_ = isDeterminate;\n                if (this.determinate_) {\n                    this.adapter_.removeClass(cssClasses.INDETERMINATE_CLASS);\n                    this.setScale_(this.adapter_.getPrimaryBar(), this.progress_);\n                }\n                else {\n                    this.adapter_.addClass(cssClasses.INDETERMINATE_CLASS);\n                    this.setScale_(this.adapter_.getPrimaryBar(), 1);\n                    this.setScale_(this.adapter_.getBuffer(), 1);\n                }\n            }\n        }, {\n            key: \"setProgress\",\n            value: function setProgress(value) {\n                this.progress_ = value;\n                if (this.determinate_) {\n                    this.setScale_(this.adapter_.getPrimaryBar(), value);\n                }\n            }\n        }, {\n            key: \"setBuffer\",\n            value: function setBuffer(value) {\n                if (this.determinate_) {\n                    this.setScale_(this.adapter_.getBuffer(), value);\n                }\n            }\n        }, {\n            key: \"setReverse\",\n            value: function setReverse(isReversed) {\n                this.reverse_ = isReversed;\n                if (this.reverse_) {\n                    this.adapter_.addClass(cssClasses.REVERSED_CLASS);\n                }\n                else {\n                    this.adapter_.removeClass(cssClasses.REVERSED_CLASS);\n                }\n            }\n        }, {\n            key: \"open\",\n            value: function open() {\n                this.adapter_.removeClass(cssClasses.CLOSED_CLASS);\n            }\n        }, {\n            key: \"close\",\n            value: function close() {\n                this.adapter_.addClass(cssClasses.CLOSED_CLASS);\n            }\n        }, {\n            key: \"setScale_\",\n            value: function setScale_(el, scaleValue) {\n                var _this = this;\n                var value = 'scaleX(' + scaleValue + ')';\n                transformStyleProperties.forEach(function (transformStyleProperty) {\n                    _this.adapter_.setStyle(el, transformStyleProperty, value);\n                });\n            }\n        }]);\n    return MDCLinearProgressFoundation;\n}(MDCFoundation);\nvar MDCLinearProgress = \n/*#__PURE__*/\nfunction (_MDCComponent) {\n    _inherits(MDCLinearProgress, _MDCComponent);\n    function MDCLinearProgress() {\n        _classCallCheck(this, MDCLinearProgress);\n        return _possibleConstructorReturn(this, (MDCLinearProgress.__proto__ || Object.getPrototypeOf(MDCLinearProgress)).apply(this, arguments));\n    }\n    _createClass(MDCLinearProgress, [{\n            key: \"open\",\n            value: function open() {\n                this.foundation_.open();\n            }\n        }, {\n            key: \"close\",\n            value: function close() {\n                this.foundation_.close();\n            }\n        }, {\n            key: \"getDefaultFoundation\",\n            value: function getDefaultFoundation() {\n                var _this = this;\n                return new MDCLinearProgressFoundation({\n                    addClass: function addClass(className) {\n                        return _this.root_.classList.add(className);\n                    },\n                    getPrimaryBar: function getPrimaryBar() {\n                        return _this.root_.querySelector(MDCLinearProgressFoundation.strings.PRIMARY_BAR_SELECTOR);\n                    },\n                    getBuffer: function getBuffer() {\n                        return _this.root_.querySelector(MDCLinearProgressFoundation.strings.BUFFER_SELECTOR);\n                    },\n                    hasClass: function hasClass(className) {\n                        return _this.root_.classList.contains(className);\n                    },\n                    removeClass: function removeClass(className) {\n                        return _this.root_.classList.remove(className);\n                    },\n                    setStyle: function setStyle(el, styleProperty, value) {\n                        return el.style[styleProperty] = value;\n                    }\n                });\n            }\n        }, {\n            key: \"determinate\",\n            set: function set(value) {\n                this.foundation_.setDeterminate(value);\n            }\n        }, {\n            key: \"progress\",\n            set: function set(value) {\n                this.foundation_.setProgress(value);\n            }\n        }, {\n            key: \"buffer\",\n            set: function set(value) {\n                this.foundation_.setBuffer(value);\n            }\n        }, {\n            key: \"reverse\",\n            set: function set(value) {\n                this.foundation_.setReverse(value);\n            }\n        }], [{\n            key: \"attachTo\",\n            value: function attachTo(root) {\n                return new MDCLinearProgress(root);\n            }\n        }]);\n    return MDCLinearProgress;\n}(MDCComponent);\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar MdcLinearProgress = /** @class */ /*@__PURE__*/ (function () {\n    function MdcLinearProgress(_changeDetectorRef, _renderer, elementRef) {\n        var _this = this;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._renderer = _renderer;\n        this.elementRef = elementRef;\n        this._reversed = false;\n        this.secondary = false;\n        this.closed = false;\n        this.role = 'progressbar';\n        this.isHostClass = true;\n        this._mdcAdapter = {\n            addClass: function (className) { return _this._renderer.addClass(_this._getHostElement(), className); },\n            getPrimaryBar: function () { return _this._getHostElement().querySelector('.mdc-linear-progress__primary-bar'); },\n            getBuffer: function () { return _this._getHostElement().querySelector('.mdc-linear-progress__buffer'); },\n            hasClass: function (className) { return _this._getHostElement().classList.contains(className); },\n            removeClass: function (className) { return _this._renderer.removeClass(_this._getHostElement(), className); },\n            setStyle: function (el, styleProperty, value) { return _this._renderer.setStyle(el, styleProperty, value); }\n        };\n        this._foundation = new MDCLinearProgressFoundation(this._mdcAdapter);\n    }\n    Object.defineProperty(MdcLinearProgress.prototype, \"determinate\", {\n        get: /**\n         * @return {?}\n         */ function () { return this._determinate; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this.setDeterminate(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdcLinearProgress.prototype, \"reversed\", {\n        get: /**\n         * @return {?}\n         */ function () { return this._reversed; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this.setReverse(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdcLinearProgress.prototype, \"progress\", {\n        get: /**\n         * @return {?}\n         */ function () { return this._progress; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this.setProgress(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdcLinearProgress.prototype, \"buffer\", {\n        get: /**\n         * @return {?}\n         */ function () { return this._buffer; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this.setBuffer(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdcLinearProgress.prototype, \"classSecondary\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this.secondary ? 'mdc-linear-progress--secondary' : '';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdcLinearProgress.prototype, \"classClosed\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this.closed ? 'mdc-linear-progress--closed' : '';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdcLinearProgress.prototype, \"classIndeterminate\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return !this.determinate ? 'mdc-linear-progress--indeterminate' : '';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MdcLinearProgress.prototype.ngAfterViewInit = /**\n     * @return {?}\n     */\n        function () {\n            this._foundation.init();\n        };\n    /**\n     * @return {?}\n     */\n    MdcLinearProgress.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n        function () {\n            this._foundation.destroy();\n        };\n    /**\n     * @return {?}\n     */\n    MdcLinearProgress.prototype.open = /**\n     * @return {?}\n     */\n        function () {\n            this._foundation.open();\n        };\n    /**\n     * @return {?}\n     */\n    MdcLinearProgress.prototype.close = /**\n     * @return {?}\n     */\n        function () {\n            this._foundation.close();\n        };\n    /**\n     * @param {?} progress\n     * @return {?}\n     */\n    MdcLinearProgress.prototype.setProgress = /**\n     * @param {?} progress\n     * @return {?}\n     */\n        function (progress) {\n            this._progress = progress;\n            this._foundation.setProgress(progress);\n            this._changeDetectorRef.markForCheck();\n        };\n    /**\n     * @param {?} buffer\n     * @return {?}\n     */\n    MdcLinearProgress.prototype.setBuffer = /**\n     * @param {?} buffer\n     * @return {?}\n     */\n        function (buffer) {\n            this._buffer = buffer;\n            this._foundation.setBuffer(buffer);\n            this._changeDetectorRef.markForCheck();\n        };\n    /**\n     * @param {?} reverse\n     * @return {?}\n     */\n    MdcLinearProgress.prototype.setReverse = /**\n     * @param {?} reverse\n     * @return {?}\n     */\n        function (reverse) {\n            this._reversed = reverse;\n            this._foundation.setReverse(reverse);\n            this._changeDetectorRef.markForCheck();\n        };\n    /**\n     * @param {?} determinate\n     * @return {?}\n     */\n    MdcLinearProgress.prototype.setDeterminate = /**\n     * @param {?} determinate\n     * @return {?}\n     */\n        function (determinate) {\n            this._determinate = determinate;\n            this._foundation.setDeterminate(determinate);\n            this._changeDetectorRef.markForCheck();\n        };\n    /**\n     * Retrieves the DOM element of the component host.\n     * @return {?}\n     */\n    MdcLinearProgress.prototype._getHostElement = /**\n     * Retrieves the DOM element of the component host.\n     * @return {?}\n     */\n        function () {\n            return this.elementRef.nativeElement;\n        };\n    return MdcLinearProgress;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar MdcLinearProgressModule = /** @class */ /*@__PURE__*/ (function () {\n    function MdcLinearProgressModule() {\n    }\n    return MdcLinearProgressModule;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nexport { MdcLinearProgressModule, MdcLinearProgress };\n",null]}