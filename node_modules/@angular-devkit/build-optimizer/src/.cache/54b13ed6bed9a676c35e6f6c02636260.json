{"remainingRequest":"C:\\Users\\Becario\\Arquitectura\\dechat_es2a\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!C:\\Users\\Becario\\Arquitectura\\dechat_es2a\\node_modules\\@angular-mdc\\web\\esm5\\common.es5.js","dependencies":[{"path":"C:\\Users\\Becario\\Arquitectura\\dechat_es2a\\node_modules\\@angular-mdc\\web\\esm5\\common.es5.js","mtime":1556004096876},{"path":"C:\\Users\\Becario\\Arquitectura\\dechat_es2a\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1556004112812},{"path":"C:\\Users\\Becario\\Arquitectura\\dechat_es2a\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1556004088045}],"contextDependencies":[],"result":["/**\n * @license\n * Copyright (c) 2018 Dominic Carretto\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/trimox/angular-mdc-web/blob/master/LICENSE\n */\n/** PURE_IMPORTS_START _angular_core,_angular_router,rxjs_operators,rxjs PURE_IMPORTS_END */\nimport { Injectable, ApplicationRef, ComponentFactoryResolver, Injector, ContentChildren, Directive, EventEmitter, NgModule, Output } from '@angular/core';\nimport { NavigationEnd, Router, RouterLink, RouterLinkWithHref } from '@angular/router';\nimport { filter, takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBoolean(value) {\n    return value != null && \"\" + value !== 'false';\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar EventRegistry = /** @class */ /*@__PURE__*/ (function () {\n    function EventRegistry() {\n        this.unlisteners = new Map();\n    }\n    /**\n     * @param {?} type\n     * @param {?} listener\n     * @param {?} target\n     * @param {?=} passive\n     * @return {?}\n     */\n    EventRegistry.prototype.listen = /**\n     * @param {?} type\n     * @param {?} listener\n     * @param {?} target\n     * @param {?=} passive\n     * @return {?}\n     */\n        function (type, listener, target, passive) {\n            if (!this.unlisteners.has(type)) {\n                this.unlisteners.set(type, new WeakMap());\n            }\n            target.addEventListener(type, listener, passive);\n            this.unlisteners.get(type).set(listener, function () { target.removeEventListener(type, listener, passive); });\n        };\n    /**\n     * @param {?} type\n     * @param {?} listener\n     * @return {?}\n     */\n    EventRegistry.prototype.unlisten = /**\n     * @param {?} type\n     * @param {?} listener\n     * @return {?}\n     */\n        function (type, listener) {\n            if (!this.unlisteners.has(type)) {\n                return;\n            }\n            var /** @type {?} */ unlisteners = this.unlisteners.get(type);\n            if (!unlisteners.has(listener)) {\n                return;\n            }\n            unlisteners.get(listener)();\n            unlisteners.delete(listener);\n        };\n    return EventRegistry;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @param {?} event\n * @return {?}\n */\nfunction isSpaceKey(event) {\n    // NB: keyCode does not work on Firefox, returning `0` for the space key.\n    return event.keyCode !== 0 ? event.keyCode === 32 : event.key === ' ';\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Cached result Set of input types support by the current browser.\n */\nvar /** @type {?} */ supportedInputTypes;\n/**\n * Types of `<input>` that *might* be supported.\n */\nvar /** @type {?} */ candidateInputTypes = [\n    'color',\n    'button',\n    'checkbox',\n    'date',\n    'datetime-local',\n    'email',\n    'file',\n    'hidden',\n    'image',\n    'month',\n    'number',\n    'password',\n    'radio',\n    'range',\n    'reset',\n    'search',\n    'submit',\n    'tel',\n    'text',\n    'time',\n    'url',\n    'week',\n];\n/**\n * @return {?} The input types supported by this browser.\n */\nfunction getSupportedInputTypes() {\n    // Result is cached.\n    if (supportedInputTypes) {\n        return supportedInputTypes;\n    }\n    // We can't check if an input type is not supported until we're on the browser, so say that\n    // everything is supported when not on the browser. We don't use `Platform` here since it's\n    // just a helper function and can't inject it.\n    if (typeof document !== 'object' || !document) {\n        supportedInputTypes = new Set(candidateInputTypes);\n        return supportedInputTypes;\n    }\n    var /** @type {?} */ featureTestInput = document.createElement('input');\n    supportedInputTypes = new Set(candidateInputTypes.filter(function (value) {\n        featureTestInput.setAttribute('type', value);\n        return featureTestInput.type === value;\n    }));\n    return supportedInputTypes;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar /** @type {?} */ UP_ARROW = 38;\nvar /** @type {?} */ DOWN_ARROW = 40;\nvar /** @type {?} */ RIGHT_ARROW = 39;\nvar /** @type {?} */ LEFT_ARROW = 37;\nvar /** @type {?} */ PAGE_UP = 33;\nvar /** @type {?} */ PAGE_DOWN = 34;\nvar /** @type {?} */ HOME = 36;\nvar /** @type {?} */ END = 35;\nvar /** @type {?} */ ENTER = 13;\nvar /** @type {?} */ SPACE = 32;\nvar /** @type {?} */ TAB = 9;\nvar /** @type {?} */ ESCAPE = 27;\nvar /** @type {?} */ BACKSPACE = 8;\nvar /** @type {?} */ DELETE = 46;\nvar /** @type {?} */ A = 65;\nvar /** @type {?} */ Z = 90;\nvar /** @type {?} */ ZERO = 48;\nvar /** @type {?} */ NINE = 57;\nvar /** @type {?} */ COMMA = 188;\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @param {?} value\n * @param {?=} fallbackValue\n * @return {?}\n */\nfunction toNumber(value, fallbackValue) {\n    if (fallbackValue === void 0) {\n        fallbackValue = 0;\n    }\n    return _isNumberValue(value) ? Number(value) : fallbackValue;\n}\n/**\n * Whether the provided value is considered a number.\n * @param {?} value\n * @return {?}\n */\nfunction _isNumberValue(value) {\n    // parseFloat(value) handles most of the cases we're interested in (it treats null, empty string,\n    // and other non-number values as NaN, where Number just uses 0) but it considers the string\n    // '123hello' to be a valid number. Therefore we also check if Number(value) is NaN.\n    return !isNaN(parseFloat(/** @type {?} */ (value))) && !isNaN(Number(value));\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @return {?}\n */\nfunction isBrowser() {\n    return typeof document === 'object' && !!document;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar MdcPortalService = /** @class */ /*@__PURE__*/ (function () {\n    function MdcPortalService(_componentFactoryResolver, _appRef, _injector) {\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._appRef = _appRef;\n        this._injector = _injector;\n    }\n    /**\n     * @param {?} component\n     * @param {?=} parent\n     * @return {?}\n     */\n    MdcPortalService.prototype.createComponentRef = /**\n     * @param {?} component\n     * @param {?=} parent\n     * @return {?}\n     */\n        function (component, parent) {\n            var _this = this;\n            if (parent === void 0) {\n                parent = document.body;\n            }\n            var /** @type {?} */ componentRef = this._componentFactoryResolver\n                .resolveComponentFactory(component)\n                .create(this._injector);\n            this._appRef.attachView(componentRef.hostView);\n            this.setDisposeFn(function () {\n                _this._appRef.detachView(componentRef.hostView);\n                componentRef.destroy();\n            });\n            this._addChild(this._getComponentRootNode(componentRef), parent);\n            return componentRef;\n        };\n    /**\n     * @param {?} componentRef\n     * @return {?}\n     */\n    MdcPortalService.prototype._getComponentRootNode = /**\n     * @param {?} componentRef\n     * @return {?}\n     */\n        function (componentRef) {\n            return /** @type {?} */ (( /** @type {?} */(componentRef.hostView)).rootNodes[0]);\n        };\n    /**\n     * @param {?} child\n     * @param {?} parent\n     * @return {?}\n     */\n    MdcPortalService.prototype._addChild = /**\n     * @param {?} child\n     * @param {?} parent\n     * @return {?}\n     */\n        function (child, parent) {\n            parent.appendChild(child);\n        };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    MdcPortalService.prototype.setDisposeFn = /**\n     * @param {?} fn\n     * @return {?}\n     */\n        function (fn) {\n            this._disposeFn = fn;\n        };\n    /**\n     * @return {?}\n     */\n    MdcPortalService.prototype.dispose = /**\n     * @return {?}\n     */\n        function () {\n            this._invokeDisposeFn();\n        };\n    /**\n     * @return {?}\n     */\n    MdcPortalService.prototype._invokeDisposeFn = /**\n     * @return {?}\n     */\n        function () {\n            if (this._disposeFn) {\n                this._disposeFn();\n                this._disposeFn = null;\n            }\n        };\n    return MdcPortalService;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar MdcRouter = /** @class */ /*@__PURE__*/ (function () {\n    function MdcRouter(_router) {\n        var _this = this;\n        this._router = _router;\n        /**\n         * Emits whenever the component is destroyed.\n         */\n        this._destroy = new Subject();\n        /**\n         * Event emitted when the link is set active.\n         */\n        this.routeChange = new EventEmitter();\n        this._router.events\n            .pipe(takeUntil(this._destroy), filter(function (event) { return event instanceof NavigationEnd; })).subscribe(function (_) {\n            _this._refreshActiveLink();\n        });\n    }\n    /**\n     * @return {?}\n     */\n    MdcRouter.prototype.ngAfterContentInit = /**\n     * @return {?}\n     */\n        function () {\n            this._listenToLinkChanges();\n            this._listenToHrefLinkChanges();\n            this._refreshActiveLink();\n        };\n    /**\n     * @return {?}\n     */\n    MdcRouter.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n        function () {\n            this._destroy.next();\n            this._destroy.complete();\n        };\n    /**\n     * @return {?}\n     */\n    MdcRouter.prototype._listenToLinkChanges = /**\n     * @return {?}\n     */\n        function () {\n            var _this = this;\n            this._routerlinks.changes\n                .pipe(takeUntil(this._destroy))\n                .subscribe(function () {\n                _this._refreshActiveLink();\n            });\n        };\n    /**\n     * @return {?}\n     */\n    MdcRouter.prototype._listenToHrefLinkChanges = /**\n     * @return {?}\n     */\n        function () {\n            var _this = this;\n            this._routerHrefLinks.changes\n                .pipe(takeUntil(this._destroy))\n                .subscribe(function () {\n                _this._refreshActiveLink();\n            });\n        };\n    /**\n     * @return {?}\n     */\n    MdcRouter.prototype._refreshActiveLink = /**\n     * @return {?}\n     */\n        function () {\n            if (!this._isRouterActivated()) {\n                return;\n            }\n            this._emitActivated(this._linkState());\n        };\n    /**\n     * @return {?}\n     */\n    MdcRouter.prototype._isRouterActivated = /**\n     * @return {?}\n     */\n        function () {\n            return (!this._routerlinks || !this._routerHrefLinks\n                || !this._router.navigated) ? false : true;\n        };\n    /**\n     * @return {?}\n     */\n    MdcRouter.prototype._linkState = /**\n     * @return {?}\n     */\n        function () {\n            return this._routerlinks.some(this.isLinkActive())\n                || this._routerHrefLinks.some(this.isLinkActive());\n        };\n    /**\n     * @return {?}\n     */\n    MdcRouter.prototype.isLinkActive = /**\n     * @return {?}\n     */\n        function () {\n            var _this = this;\n            return function (route) { return _this._router.isActive(route.urlTree, false); };\n        };\n    /**\n     * Emits an activated link event.\n     * @param {?} active\n     * @return {?}\n     */\n    MdcRouter.prototype._emitActivated = /**\n     * Emits an activated link event.\n     * @param {?} active\n     * @return {?}\n     */\n        function (active) {\n            this.routeChange.emit({ active: active });\n        };\n    return MdcRouter;\n}());\nvar MdcRouterModule = /** @class */ /*@__PURE__*/ (function () {\n    function MdcRouterModule() {\n    }\n    return MdcRouterModule;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nexport { toBoolean, EventRegistry, isSpaceKey, getSupportedInputTypes, UP_ARROW, DOWN_ARROW, RIGHT_ARROW, LEFT_ARROW, PAGE_UP, PAGE_DOWN, HOME, END, ENTER, SPACE, TAB, ESCAPE, BACKSPACE, DELETE, A, Z, ZERO, NINE, COMMA, toNumber, _isNumberValue, isBrowser, MdcPortalService, MdcRouter, MdcRouterModule };\n",null]}