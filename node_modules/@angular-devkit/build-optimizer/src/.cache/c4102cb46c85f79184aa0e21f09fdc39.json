{"remainingRequest":"C:\\Users\\rauls\\OneDrive\\Documentos\\dechat_es2a\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!C:\\Users\\rauls\\OneDrive\\Documentos\\dechat_es2a\\node_modules\\@angular-mdc\\web\\esm5\\button.es5.js","dependencies":[{"path":"C:\\Users\\rauls\\OneDrive\\Documentos\\dechat_es2a\\node_modules\\@angular-mdc\\web\\esm5\\button.es5.js","mtime":1554924123692},{"path":"C:\\Users\\rauls\\OneDrive\\Documentos\\dechat_es2a\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1554924186691},{"path":"C:\\Users\\rauls\\OneDrive\\Documentos\\dechat_es2a\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1554924110461}],"contextDependencies":[],"result":["/**\n * @license\n * Copyright (c) 2018 Dominic Carretto\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/trimox/angular-mdc-web/blob/master/LICENSE\n */\n/** PURE_IMPORTS_START _angular_core,_angular_mdc_web_common,_angular_mdc_web_ripple,_angular_mdc_web_icon PURE_IMPORTS_END */\nimport { ChangeDetectionStrategy, Component, ContentChild, ElementRef, HostBinding, HostListener, Input, Renderer2, ViewEncapsulation, NgModule } from '@angular/core';\nimport { EventRegistry } from '@angular-mdc/web/common';\nimport { MdcRipple } from '@angular-mdc/web/ripple';\nimport { MdcIcon } from '@angular-mdc/web/icon';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar MdcButton = /** @class */ /*@__PURE__*/ (function () {\n    function MdcButton(_renderer, _elementRef, _ripple) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        this._ripple = _ripple;\n        this._raised = false;\n        this._primary = false;\n        this._dense = false;\n        this._secondary = false;\n        this._unelevated = false;\n        this._outlined = false;\n        this._disabled = false;\n        this.isHostClass = true;\n    }\n    Object.defineProperty(MdcButton.prototype, \"raised\", {\n        get: /**\n         * @return {?}\n         */ function () { return this._raised; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this.setRaised(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdcButton.prototype, \"primary\", {\n        get: /**\n         * @return {?}\n         */ function () { return this._primary; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this.setPrimary(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdcButton.prototype, \"dense\", {\n        get: /**\n         * @return {?}\n         */ function () { return this._dense; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this.setDense(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdcButton.prototype, \"secondary\", {\n        get: /**\n         * @return {?}\n         */ function () { return this._secondary; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this.setSecondary(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdcButton.prototype, \"unelevated\", {\n        get: /**\n         * @return {?}\n         */ function () { return this._unelevated; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this.setUnelevated(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdcButton.prototype, \"outlined\", {\n        get: /**\n         * @return {?}\n         */ function () { return this._outlined; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this.setOutlined(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdcButton.prototype, \"icon\", {\n        get: /**\n         * @return {?}\n         */ function () { return this._icon; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this.setIcon(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdcButton.prototype, \"disabled\", {\n        get: /**\n         * @return {?}\n         */ function () { return this._disabled; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */ function (value) {\n            this.setDisabled(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdcButton.prototype, \"tabindex\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this.disabled ? -1 : 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdcButton.prototype, \"classRaised\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this.raised ? 'mdc-button--raised' : '';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdcButton.prototype, \"classPrimary\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this.primary ? 'mdc-button--primary' : '';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdcButton.prototype, \"classSecondary\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this.secondary ? 'mdc-button--secondary' : '';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdcButton.prototype, \"classDense\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this.dense ? 'mdc-button--dense' : '';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdcButton.prototype, \"classUnelevated\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this.unelevated ? 'mdc-button--unelevated' : '';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdcButton.prototype, \"classOutlined\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this.outlined ? 'mdc-button--outlined' : '';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} evt\n     * @return {?}\n     */\n    MdcButton.prototype.onclick = /**\n     * @param {?} evt\n     * @return {?}\n     */\n        function (evt) {\n            this._onClick(evt);\n        };\n    /**\n     * @return {?}\n     */\n    MdcButton.prototype.ngAfterContentInit = /**\n     * @return {?}\n     */\n        function () {\n            this._ripple.attachTo(this.getHostElement());\n        };\n    /**\n     * @return {?}\n     */\n    MdcButton.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n        function () {\n            this._ripple.destroy();\n        };\n    /**\n     * @param {?} disabled\n     * @return {?}\n     */\n    MdcButton.prototype.setDisabled = /**\n     * @param {?} disabled\n     * @return {?}\n     */\n        function (disabled) {\n            this._disabled = disabled;\n            if (disabled) {\n                this._renderer.setAttribute(this.getHostElement(), 'disabled', 'true');\n                this._renderer.setAttribute(this.getHostElement(), 'aria-disabled', 'true');\n            }\n            else {\n                this._renderer.removeAttribute(this.getHostElement(), 'disabled');\n                this._renderer.removeAttribute(this.getHostElement(), 'aria-disabled');\n            }\n        };\n    /**\n     * @param {?} raised\n     * @return {?}\n     */\n    MdcButton.prototype.setRaised = /**\n     * @param {?} raised\n     * @return {?}\n     */\n        function (raised) {\n            this._raised = raised;\n        };\n    /**\n     * @param {?} primary\n     * @return {?}\n     */\n    MdcButton.prototype.setPrimary = /**\n     * @param {?} primary\n     * @return {?}\n     */\n        function (primary) {\n            this._primary = primary;\n        };\n    /**\n     * @param {?} dense\n     * @return {?}\n     */\n    MdcButton.prototype.setDense = /**\n     * @param {?} dense\n     * @return {?}\n     */\n        function (dense) {\n            this._dense = dense;\n        };\n    /**\n     * @param {?} secondary\n     * @return {?}\n     */\n    MdcButton.prototype.setSecondary = /**\n     * @param {?} secondary\n     * @return {?}\n     */\n        function (secondary) {\n            this._secondary = secondary;\n        };\n    /**\n     * @param {?} unelevated\n     * @return {?}\n     */\n    MdcButton.prototype.setUnelevated = /**\n     * @param {?} unelevated\n     * @return {?}\n     */\n        function (unelevated) {\n            this._unelevated = unelevated;\n        };\n    /**\n     * @param {?} outlined\n     * @return {?}\n     */\n    MdcButton.prototype.setOutlined = /**\n     * @param {?} outlined\n     * @return {?}\n     */\n        function (outlined) {\n            this._outlined = outlined;\n        };\n    /**\n     * @param {?} icon\n     * @return {?}\n     */\n    MdcButton.prototype.setIcon = /**\n     * @param {?} icon\n     * @return {?}\n     */\n        function (icon) {\n            this._icon = icon;\n            if (this.buttonIcon) {\n                this._renderer.addClass(this.buttonIcon.elementRef.nativeElement, 'mdc-button__icon');\n            }\n            else if (icon) {\n                this._renderer.addClass(this.icon, 'mdc-button__icon');\n            }\n        };\n    /** Focuses the button. */\n    /**\n     * Focuses the button.\n     * @return {?}\n     */\n    MdcButton.prototype.focus = /**\n     * Focuses the button.\n     * @return {?}\n     */\n        function () {\n            this.getHostElement().focus();\n        };\n    /**\n     * @return {?}\n     */\n    MdcButton.prototype.getHostElement = /**\n     * @return {?}\n     */\n        function () {\n            return this._elementRef.nativeElement;\n        };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    MdcButton.prototype._onClick = /**\n     * @param {?} event\n     * @return {?}\n     */\n        function (event) {\n            // A disabled button shouldn't apply any actions\n            if (this.disabled) {\n                event.preventDefault();\n                event.stopImmediatePropagation();\n            }\n        };\n    return MdcButton;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar MdcButtonModule = /** @class */ /*@__PURE__*/ (function () {\n    function MdcButtonModule() {\n    }\n    return MdcButtonModule;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nexport { MdcButtonModule, MdcButton };\n",null]}