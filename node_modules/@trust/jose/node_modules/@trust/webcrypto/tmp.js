const crypto = require('./src')
const base64url = require('base64url')
const {TextEncoder, TextDecoder} = require('text-encoding')

let pub, prv

let params = {
  name: 'RSASSA-PKCS1-v1_5',
  modulusLength: 2048,
  publicExponent: new Uint8Array([0x01,0x00,0x01]),
  hash: { name: 'SHA-256' }
}

let data = new TextEncoder().encode('foo')

// generate RSA keypair
crypto
  .subtle
  .generateKey(params, true, ['sign', 'verify'])
  .then(keypair => {
    pub = keypair.publicKey
    prv = keypair.privateKey
  })

  // sign some data
  .then(() => {
    //console.log(pub, prv)
    return crypto.subtle.sign(params, prv, data)
  })

  // verify signature
  .then(signature => {
    //console.log('signature', signature)
    return crypto.subtle.verify(params, pub, signature, data)
  })

  // it worked!
  .then(verified => console.log('verified:', verified))
  .then(() => {
    return crypto.subtle.exportKey('jwk', pub)
  })
  .then(jwk => {
    return crypto.subtle.importKey('jwk', jwk, { name: 'RSASSA-PKCS1-v1_5' }, true, ['verify'])
  })
 // .then(console.log)

  // it failed
  .catch(err => console.log(err))
